<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BizNest.Service</name>
    </assembly>
    <members>
        <member name="P:BizNest.Service.Controllers.BaseApiController.Logic">
            <summary>
            
            </summary>
        </member>
        <member name="M:BizNest.Service.Controllers.BaseApiController.AddHeader(System.String,System.Object)">
            <summary>
            Adds the header.
            </summary>
            <param name="key">The key.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:BizNest.Service.Controllers.BaseApiController.ModelError(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            
            </summary>
            <param name="modelState"></param>
            <returns></returns>
        </member>
        <member name="M:BizNest.Service.Controllers.BusinessNamesController.Search(BizNest.Core.Domain.Form.App.BusinessNameSearchForm)">
            <summary>
            Add Business
            </summary>
            <param name="form"></param>
            <returns></returns>
        </member>
        <member name="M:BizNest.Service.Controllers.BusinessTypesController.Get(System.String,System.String,System.Int32,System.Int32,System.Decimal,System.String,System.Int64,System.Int64,System.String,System.Int32)">
            <summary>
            Search, Page, filter and Shaped BusinessTypes
            </summary>
            <param name="sort"></param>
            <param name="name"></param>
            <param name="minStakeHolder"></param>
            <param name="maxStakeHolder"></param>
            <param name="minCapital"></param>
            <param name="info"></param>
            <param name="page"></param>
            <param name="pageSize"></param>
            <param name="fields"></param>
            <param name="draw"></param>
            <returns></returns>  
        </member>
        <member name="M:BizNest.Service.Controllers.BusinessTypesController.Get(System.Int32)">
            <summary>
            Get BusinessType by ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:BizNest.Service.Controllers.BusinessTypesController.Create(BizNest.Core.Domain.Form.App.BusinessTypeForm)">
            <summary>
            Add BusinessType
            </summary>
            <param name="form"></param>
            <returns></returns>  
        </member>
        <member name="M:BizNest.Service.Controllers.BusinessTypesController.Update(System.Int32,BizNest.Core.Domain.Form.App.BusinessTypeForm)">
            <summary>
            Update BusinessType
            </summary>
            <param name="id"></param>
            <param name="form"></param>
            <returns></returns>
        </member>
        <member name="M:BizNest.Service.Controllers.BusinessTypesController.Delete(System.Int32)">
            <summary>
            Delete BusinessType
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:BizNest.Service.Models.AuthModels.JwtIssuerOptions.Issuer">
            <summary>
            4.1.1.  "iss" (Issuer) Claim - The "iss" (issuer) claim identifies the principal that issued the JWT.
            </summary>
        </member>
        <member name="P:BizNest.Service.Models.AuthModels.JwtIssuerOptions.Subject">
            <summary>
            4.1.2.  "sub" (Subject) Claim - The "sub" (subject) claim identifies the principal that is the subject of the JWT.
            </summary>
        </member>
        <member name="P:BizNest.Service.Models.AuthModels.JwtIssuerOptions.Audience">
            <summary>
            4.1.3.  "aud" (Audience) Claim - The "aud" (audience) claim identifies the recipients that the JWT is intended for.
            </summary>
        </member>
        <member name="P:BizNest.Service.Models.AuthModels.JwtIssuerOptions.Expiration">
            <summary>
            4.1.4.  "exp" (Expiration Time) Claim - The "exp" (expiration time) claim identifies the expiration time on or after which the JWT MUST NOT be accepted for processing.
            </summary>
        </member>
        <member name="P:BizNest.Service.Models.AuthModels.JwtIssuerOptions.NotBefore">
            <summary>
            4.1.5.  "nbf" (Not Before) Claim - The "nbf" (not before) claim identifies the time before which the JWT MUST NOT be accepted for processing.
            </summary>
        </member>
        <member name="P:BizNest.Service.Models.AuthModels.JwtIssuerOptions.IssuedAt">
            <summary>
            4.1.6.  "iat" (Issued At) Claim - The "iat" (issued at) claim identifies the time at which the JWT was issued.
            </summary>
        </member>
        <member name="P:BizNest.Service.Models.AuthModels.JwtIssuerOptions.ValidFor">
            <summary>
            Set the timespan the token will be valid for (default is 120 min)
            </summary>
        </member>
        <member name="P:BizNest.Service.Models.AuthModels.JwtIssuerOptions.JtiGenerator">
            <summary>
            "jti" (JWT ID) Claim (default ID is a GUID)
            </summary>
        </member>
        <member name="P:BizNest.Service.Models.AuthModels.JwtIssuerOptions.SigningCredentials">
            <summary>
            The signing key to use when generating tokens.
            </summary>
        </member>
        <member name="M:BizNest.Service.Services.JwtFactory.ToUnixEpochDate(System.DateTime)">
            <returns>Date converted to seconds since Unix epoch (Jan 1, 1970, midnight UTC).</returns>
        </member>
    </members>
</doc>
